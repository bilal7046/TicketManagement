@using TicketManagement.Entities
@model Booking
@{
    ViewData["Title"] = "BookTicket";

}

<div class="container">
    <div class="header">
        <h1>Title</h1>
    </div>
    <div class="content">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>
            <p class="note">New Year Event</p>
            <label for="first-name">Your Name *</label>
            <div style="display: flex; gap: 10px;">
                <div style="display: flex; flex-direction: column;">
                    <input type="text" id="first-name" placeholder="First Name" asp-for="FirstName">
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div style="display: flex; flex-direction: column;">
                    <input type="text" id="last-name" placeholder="Last Name" asp-for="LastName">
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>


            <label for="email">E-mail *</label>
            <div class="form-group" style="display: flex; flex-direction: column;">
                <input type="email" id="email" placeholder="email@example.com" asp-for="Email" class="form-control">
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <label for="dob">Date of Birth *</label>
            <div class="form-group">
                <input type="date" id="dob" asp-for="DOB">
                <span asp-validation-for="DOB" class="text-danger"></span>
            </div>

            <label>Select Ticket Type *</label>
            <div class="radio-group">
                @{
                    var ticketTypes = ViewData["TicketTypes"] as IEnumerable<TicketType>;
                    if (ticketTypes != null && ticketTypes.Count() > 0)
                    {
                        @foreach (var type in ticketTypes)
                        {
                            <div id="ticket-element-@type.Id" class="ticket-element" style="display: flex; align-items: center; gap: 10px;">
                                <input type="radio" id="ticket-@type.Id" asp-for="TicketTypeId" value="@type.Id" onclick="checkIfQuantityAvailable(@type.Id)">
                                <label for="ticket-@type.Id" >
                                    @type.Name (£ @type.Price)
                                    <span id="soldout-status-@type.Id" class="sold-out" style="color: red; display: none;">Sold out</span>
                                    <span id="hurry-status-@type.Id" class="sold-out" style="color: orange; display: none;">Hurry selling fast</span>
                                </label>
                            </div>
                        }

                    }
                }
            </div>

            <label for="promo-code">Promo Code</label>
            <div class="promo-container">
                <input type="text" id="promo-code" placeholder="Enter code" asp-for="@Model.PromoCodeStr">
                <button type="button" class="promo-btn" onclick="applyPromoCode()">Apply</button>
            </div>

            <p class="discount-price" id="discount-display" style="color: green; margin-top: 10px;display:none"></p>
            <p class="total-price">Total Price: <span id="total-price">£0</span></p>

            <p class="note">Some more text will go here and so on.</p>
            <button type="submit" id="btnSubmit" class="book-btn">Book</button>
        </form>
    </div>
</div>
<partial name="_validationscriptspartial"></partial>
@section Scripts
{
    <script src="~/js/ticket.js"></script>
}